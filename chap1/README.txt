# 애자일 기법
- 테스트 주도 개발 (TDD : Test-Driven Development)
- 행위 주도 개발 (BDD : Behavior-Driven Development)
- 구현하고자 하는 동작의 사례들을 먼저 기술해서 소프트웨어를 설계해놓으면, 미리 기술해놓은 테스트들의 모음을 실행해서 응용프램의 안정성과 정확성을 검증할 수 있다.

# ASP.NET MVC의 주요 장점
- MVC 아키텍처를 사용한다.
- 확장성이 좋다.
  - 해당 프레임워크는 적절한 .NET 인터페이스를 구현했거나, 특정 추상 기본 클래스에 기반한 일련의 독립적인 구성요소들의 조합으로 구성되어 있다.
  - 그렇기 때문에 라우팅 시스템, 뷰 엔진, 컨트롤러 팩터리 같은 구성요소들을 직접 구현해서 손쉽게 대체할 수 있다.
- HTML과 HTTP에 대한 강력한 제어
  - 표준을 준수하는 깔끔한 마크업을 만들어 낸다.
  - 최신 jQuery나 Bootstrap CSS UI 등을 도입해서 손쉽게 사용할 수 있다.
- 테스트 용이성
  - 응용프로그램의 관심사들을 분리해서 독립적인 부분들로 나눠지도록 만들어 주기 때문에 테스트하기가 용이하다.
  - 단위 테스트와 Mocking 도구들의 요구사항을 만족시킬 수 있는 구조를 만들어 단위 테스트하기 용이하다.
- 강력한 라우팅 시스템
  - 'URL 라우팅'이라는 기능을 통해서 깔끔한 URL을 제공해줄 수 있다.
- ASP.NET 플랫폼의 장점들을 기반으로 만들어졌다.
  - 인증된 ASP.NET 플랫폼에 내장된 기능들을 사용할 수 있다.

# 책의 예제 소스 링크
- https://github.com/apress/pro-asp.net-mvc-5
- 보안 등 추가적 내용 : github에서 Additional content 폴더
